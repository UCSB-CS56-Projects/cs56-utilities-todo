<project default="compile">

  <!-- build.xml for todo
       Note: for this lab, you should not need to edit this file -->

   <property name="projectPackage" value="edu.ucsb.cs56.projects.utilties.todo" />
   <property environment="env"/> <!-- load the environment variables --> 
   <property name="webRoot" value="${env.HOME}/public_html/cs56" />
   <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}/cs56" />
   <property name="projectName" value="Todo" /> 
   <property name="javadocDest" value="${webRoot}/${projectName}/javadoc" /> 
   <property name="javadocURL" value="${webBaseURL}/${projectName}/javadoc" /> 
   <property name="javadocLink" value="http://java.sun.com/javase/7/docs/api/" />
   <path id="project.class.path">
         <pathelement location="build"/>
         <pathelement location="lib/junit-4.8.2.jar"/>
   </path>   

  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" 
     includeantruntime="false" >
      <classpath refid="project.class.path" />
    </javac>
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />  
    <delete dir="javadoc" quiet="true" />
  </target> 

 <target name="javadoc" depends="compile" description="publish javadoc"> 
   <delete dir="javadoc" quiet="true" /> 
   <javadoc  destdir="javadoc" author="true" version="true" use="true" >
     <fileset dir="src" includes="**/*.java"/>
     <classpath refid="project.class.path" />
     <link href="${javadocLink}" /> <!-- for external links to std API classes -->
   </javadoc>

   <!-- delete the old javadoc --> 
   <delete quiet="true" dir="${javadocDest}" /> 
 
   <!-- copy everything you just made to the javadoc destination,
  and then make it readable -->   
   <copy todir="${javadocDest}" > 
     <fileset dir="javadoc"/> 
   </copy> 

   <!-- Note: this only does the chmod command on the javadoc
  subdirectory and its contents.  You MIGHT have to MANUALLY do the
  chmod on the parent directories.  However, you should only need to do
  that once. 
     -->
   <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" /> 
   <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" /> 
   <echo>Javadoc deployed to ${javadocURL}</echo>
 </target>        

  <target name="run" depends="compile" description="run the todo application">
    <java fork="true" classpathref="project.class.path" classname="${projectPackage}.Todo" />
  </target>


</project>
